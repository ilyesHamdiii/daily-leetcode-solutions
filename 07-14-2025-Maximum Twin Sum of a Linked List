# Problem:https://leetcode.com/problems/maximum-twin-sum-of-a-linked-list/?envType=study-plan-v2&envId=leetcode-75
# Difficulty: Medium


# Time: O(n)
# Space: O(n/2)
class Solution:
    def pairSum(self, head: Optional[ListNode]) -> int:
        fast, slow, stack, max_twin_sum = head, head, [], 0
        
        while fast and fast.next:
            fast = fast.next.next
            stack.append(slow)
            slow = slow.next
        
        while slow:
            max_twin_sum = max(max_twin_sum, stack.pop().val + slow.val)
            slow = slow.next
        
        return max_twin_sum