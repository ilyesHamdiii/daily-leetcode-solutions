#https://leetcode.com/problems/search-in-a-binary-search-tree/?envType=study-plan-v2&envId=leetcode-75
# Difficulty: Easy


# Time: O(n)
# Space: O(log(n))



# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def searchBST(self, root, val):
        def dfs(root,val):
            if not root:
                return None
            elif val>root.val:
                return dfs(root.right,val)
            elif root.val>val:
                return dfs(root.left,val)
            else:
                return root
        return (dfs(root,val))